# 15.Анализ рисков созданной архитектуры, компромиссов.
Анализ рисков включает следующие аспекты:
* RI-1. Слишком мало клиентов могут сразу принять новую систему, что уменьшит прибыль от инвестиций в новую систему.
В соответствии с заданием некоторые части существуют и функционируют. Поэтапная реализация системы включает интеграцию этих частей в общую экосистему с последующим развитием. Это позволит сохранит уже существующую клиентскую базу, а за счет поэтапного расширения функциональности - увеличить её.
* RI-2. Интеграция всех сервисов может проводиться слишком долго, в результате чего конкуренты могут раньше реализовать похожую функциональность.
Интеграция в системе реализуется с использованием следующих паттернов: API GateWay и ServiceBus.
API GateWay позволяет выставлять методы по мере готовности функциональности, что отчасти нивелирует риск.
Использование ServiceBus потребует некоторого времени на начальном этапе. Однако позволяет своевременно реагировать на события (в соответствии с событийной моделью, например отслеживания статусов прохождения заказов), а также в перспективе позволит легко наращивать функциональность системы.
* RI-3. Клиенты могут посчитать «несочетаемым» контент тренировок и онлайн-магазина, что может вызвать отторжение части клиентов.
Указанные виды функциональности реализуются в отдельных доменах с очень ограниченным количеством связей. Это позволяет клиентам пользоваться только требуемой функциональностью продукта. Кроме того, возможно реализовать кастомные настройки пользовательского интерфейса, позволяющие скрыть невостребованную функциональность.
* RI-4. Имеющихся возможностей новой системы может оказаться недостаточно, из-за чего часть клиентов не всегда смогут поучаствовать в требуемых событиях или приобрести нужные товары.
Значительная часть системы разворачивается на технических средствах облачного провайдера, что обеспечивает её элластичность. Чувствительные для бизнеса данные хранятся на серверах компании. Там же установлены сервисы, работающие с этими данными. По мере роста количества активны клиентов будет осуществляться масштабирование сервисов. При этом, существует риск не обеспечить доступность системы в моменты ажиотажного спроса. Учитывая относительно небольшую вероятность такого события, такой риск принимается.
* RI-5. Промоакции могут не заинтересовать клиентов.
Не отностся к технической составляющей реализуемой системы и, как следствие, не может быть учтен в её архитектуре.
* RI-6. Принятые архитектурные решения не позволят системе (или отдельным её компонентам) обслуживать всех пользователей при пиковой нагрузке в момент проведения массовых спортивных мероприятий и распродаж.
Аналогично RI-4.
* RI-7. При тренировках в «диких» местах при отсутствии интернета большая часть функциональности будет недоступна. Клиенту придется пользоваться теми данными, которые он предварительно закешировал в приложении.
Риск принимается. Частично он нивелируется кешированием со стороны клиентского приложения данных тренировочного дневника, данных для сравнения нагрузки, календарем спортивных мероприятий и промоакций.
* RI-8. Возможное отсутствие совместимости приложения с некоторыми видами дополнительных устройств и ряда фитнес-функций телефона (это могут быть старые версии или только что выпущенные).
Для новых версий будут выходить регулярные обновления, для подключения различных видов дополнительных устройств используется паттерн Backend-for-Frontend. Для старых версий устройств риск принимается.
* RI-9. Все разработанные сервисы невозможно интегрировать в одну систему без доработки в связи с несовместимостью контрактов.
В соответствии с заданием разработана лишь небольшая часть сервисов. Релизация API или использование ServiceBus решит данную проблему.
* RI-10. Возможность утечки персональных или иных клиентских данных.
Для снижения утечки персональных данных применяются традиционные подходы, такие как: хранение этих данных на серверах компании, шифрование трафика, разграничение прав доступа, парсинг запросов и пр.
